name: "extractorapp"
on:
  workflow_dispatch:
  push:
    paths:
      - "commons/**"
      - "extractorapp/**"
  pull_request:
    paths:
      - "commons/**"
      - "extractorapp/**"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: "Checking out"
      uses: actions/checkout@v1

    - name: "Setting up Java"
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'maven'

    - name: "Configuring Maven"
      run: |
          mkdir -p $HOME/.m2
          cp .github/resources/m2-settings.xml $HOME/.m2/settings.xml

    - name: "Installing & checking formatting"
      run: ./mvnw --no-transfer-progress -B -P-all,extractorapp -Dfmt.action=validate install -Dadditionalparam=-Xdoclint:none -DskipTests

    - name: "Running tests"
      working-directory: extractorapp/
      run: ../mvnw --no-transfer-progress clean verify -Pit -Dfmt.skip=true -Dadditionalparam=-Xdoclint:none

    - name: Getting image tag
      if: github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      id: version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: "Building docker image"
      if: github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      working-directory: extractorapp/
      run: ../mvnw --no-transfer-progress clean package docker:build -Pdocker,log4j-logstash,sentry-log4j -DdockerImageName=georchestra/extractorapp:${{ steps.version.outputs.VERSION }} -DskipTests

    - name: "Logging in docker.io"
      uses: azure/docker-login@v1
      if: github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "Pushing latest to docker.io"
      if: github.ref == 'refs/heads/master' && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      run: |
        docker tag georchestra/extractorapp:${{ steps.version.outputs.VERSION }} georchestra/extractorapp:latest
        docker push georchestra/extractorapp:latest

    - name: "Pushing release branch to docker.io"
      if: contains(github.ref, 'refs/heads/22.') && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      run: |
        docker push georchestra/extractorapp:${{ steps.version.outputs.VERSION }}

    - name: "Pushing release tag to docker.io"
      if: contains(github.ref, 'refs/tags/22.') && github.repository == 'georchestra/georchestra' && github.actor != 'dependabot[bot]'
      run: |
        docker push georchestra/extractorapp:${{ steps.version.outputs.VERSION }}

    - name: "Remove SNAPSHOT jars from repository"
      run: |
        find .m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
